@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@model @Model.ViewDataTypeName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@Model.ViewName";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
@:<h1>@Model.ViewName</h1>
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.ViewName</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
}
<div class="container">
    <main role="main" class="pb-3">

        <h2>Manage @Model.ViewDataTypeShortName</h2>

        <div>
            <hr>
            <div class="row">
                <div class="col-md-3">
                    <ul class="nav nav-pills flex-column">
                        <li class="nav-item"><a class="nav-link " asp-action="create">Create New</a></li>
                        <li class="nav-item"><a class="nav-link " asp-action="Index">List</a></li>
                        <li class="nav-item"><a class="nav-link " asp-action="Edit" asp-route-id="@@Model.Id" >Edit @@Model.Name </a></li>
                        <li class="nav-item"><a class="nav-link " asp-action="Details" asp-route-id="@@Model.Id" >Detail of @@Model.Name </a></li>
                        <li class="nav-item"><a class="nav-link active bg-danger" href="#">Delete @@Model.Name </a></li>
                    </ul>

                </div>
                <div class="col-md-9">
                    <div class="row">
                        <div class="col-md-4">
                            <dl class="row">
                            @{                
                            Dictionary<string, IPropertyMetadata> propertyLookup = ((IModelMetadata)Model.ModelMetadata).Properties.ToDictionary(x => x.PropertyName, x => x);
                            Dictionary<string, INavigationMetadata> navigationLookup = ((IModelMetadata)Model.ModelMetadata).Navigations.ToDictionary(x => x.AssociationPropertyName, x => x);
                            foreach (var item in Model.ModelMetadata.ModelType.GetProperties())
                            {
                                if (propertyLookup.TryGetValue(item.Name, out IPropertyMetadata property)
                                    && property.Scaffold && !property.IsForeignKey && !property.IsPrimaryKey)
                                {
                                <dt class = "col-sm-12">
                                    @@Html.DisplayNameFor(model => model.@GetValueExpression(property))
                                </dt>
                                <dd class = "col-sm-12">
                                    @@Html.DisplayFor(model => model.@GetValueExpression(property))
                                </dd>
                                }
                                else if (navigationLookup.TryGetValue(item.Name, out INavigationMetadata navigation))
                                {
                                <dt class = "col-sm-12">
                                    @@Html.DisplayNameFor(model => model.@GetValueExpression(navigation))
                                </dt>
                                <dd class = "col-sm-12">
                                    @@Html.DisplayFor(model => model.@GetValueExpression(navigation).@navigation.DisplayPropertyName)
                                </dd>
                                }
                            }
                            @:</dl>
                            @:<form asp-action="@Model.ViewName">
                                foreach (var property in Model.ModelMetadata.Properties)
                                {
                                    if(property.IsPrimaryKey){
                                @:<input type="hidden" asp-for="@GetValueExpression(property)" />
                                    }
                                }
                                @:<input type="submit" value="Delete" class="btn btn-danger" /> 
                            @:</form>
                        @:</div>
                    @:</div>
               @:</div>
            @:</div>
        @:</div>
    @:</main>
@:</div>
}
@{
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
        //ClearIndent();
@:</body>
@:</html>
    }
}
@functions
{
    string GetPrimaryKeyName()
    {
        return (Model.ModelMetadata.PrimaryKeys != null && Model.ModelMetadata.PrimaryKeys.Length == 1)
        ? Model.ModelMetadata.PrimaryKeys[0].PropertyName
        : null;
    }

    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }

    string GetValueExpression(INavigationMetadata navigation)
    {
        return navigation.AssociationPropertyName;
    }
}
